class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int row = edges.length;
       
        
        long[][] graph = new long[n][n];
        for(int i=0;i<n;i++){
            for(int j=0; j<n;j++){
                graph[i][j]=Integer.MAX_VALUE;
            }
        }
        for(int[] ele : edges){
            int u = ele[0];
            int v = ele[1];
            int w = ele[2];
            graph[u][v] = w;
            graph[v][u] = w;
        }
        
        for(int i=0;i<n;i++){
           
            graph[i][i]=0;
          
        }
       
        
        for(int k=0; k<n; k++){
            for(int i=0;i<n;i++){
                for(int j=0; j<n; j++){
                    
                    graph[i][j] = Math.min(graph[i][j],graph[i][k]+graph[k][j]);
                }
            }
        }
        int cityCount = Integer.MAX_VALUE;
        int ans=0;
        for(int i=0;i<n;i++){
            int count=0;
            for(int j=0;j<n;j++){
                if(i!=j && graph[i][j]<=distanceThreshold){
                    count++;
                }
            }
            if(count<=cityCount){
                ans=i;
                cityCount=count;
            }
        }
        return ans;
    }
}
