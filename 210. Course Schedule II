class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        Map<Integer, List<Integer>> graph = new HashMap<>();
        int[] arr = new int[numCourses];
        int[] indegree = new int[numCourses];
        int index=0;
        for(int i=0;i<numCourses;i++){
            graph.put(i,new ArrayList<Integer>());
        }
       for(int i=0;i<prerequisites.length;i++){
            int u =  prerequisites[i][0];
            int v = prerequisites[i][1];
            graph.get(v).add(u);
            indegree[u]++;
        }
        Queue<Integer> q = new LinkedList<Integer>();
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0){
                q.add(i);
                arr[index++]=i;
            }
        }
        while(!q.isEmpty()){
            int curr = q.poll();
            
            for(int ele: graph.get(curr)){
                indegree[ele]--;
                if(indegree[ele]==0){
                    q.add(ele);
                    arr[index++]=ele;
                }
            }
            numCourses--;
        }
        if(numCourses==0){
            return arr;
        }
        else{
            return new int[0];
        }
    
    }
} 
