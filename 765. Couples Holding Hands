class Solution {
    //1. store the elements of the array in the map mapped as value to index
    //2. iterate the array and check the two consecutive value and move i by 2.If element present at index i is even than nexshould be +1, if elemnt present at i is odd, than the next element will be -1.
    //3. check if i and i+1 is satisfying the above steps, if not increment swap and call swap function.
    //in swap function remember to update the map after swapping
    Map<Integer,Integer> map = new HashMap<>();
    public int minSwapsCouples(int[] row) {
        int n =  row.length;
        int swaps=0;
        for(int i=0;i<n;i++){
            map.put(row[i],i);
        }
        for(int i=0;i<n;i+=2){
            int first = row[i];
            int second = first ^ 1; //for odd the LSB is 1, so 1^1 is 0
                                   //for even the LSB is 0, so 0^1 is 1
            if(row[i+1]!=second){
                swaps++;
                swap(row,i+1,map.get(second));
            }
        }
        return swaps;
    }
    
    public void swap(int[] row, int start, int end){
        int temp = row[start];
        row[start] = row[end];
        row[end] = temp;
        map.put(row[start],start);
        map.put(row[end],end);
    }
}
